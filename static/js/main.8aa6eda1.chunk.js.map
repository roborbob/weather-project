{"version":3,"sources":["assets/overcast.jpg","assets/rain.jpg","assets/storm.jpg","assets/space.jpg","components/iconMap.js","components/primaryWeather.js","context/context.js","components/weatherCard.js","components/locationMapper.js","components/spinner.js","containers/WeeklyWeather.js","components/search.js","App.js","serviceWorker.js","index.js","assets/clear.jpg"],"names":["module","exports","IconMap","WeatherContainer","styled","div","PrimaryWeather","props","rise","Date","sunrise","a","getHours","toString","length","b","getMinutes","set","sunset","c","d","className","id","temp","description","wind","toFixed","ThemeContext","React","createContext","PositionContext","Clear","Rain","Overcast","Thunderstorm","Clouds","LocationMapper","placeName","Locations","filter","e","city","Spinner","apiKey","WeeklyWeatherContainer","section","WeeklyWeather","useContext","position","setPosition","useState","undefined","forecast","setForecast","useEffect","sessionStorage","getItem","date","sessionData","JSON","parse","console","log","navigator","geolocation","getCurrentPosition","geo","params","lon","coords","longitude","lat","latitude","appid","axios","get","then","response","setItem","stringify","data","fetchData","location","lng","current","weather","wind_speed","sortedLocations","locations","sort","StyledSearch","DropDownList","ul","toggle","ListItem","li","Search","input","setInput","list","setList","setToggle","listSelection","setListSelection","newList","toUpperCase","includes","type","onChange","target","value","autoFocus","placeholder","map","i","onClick","clickHandler","key","day","getDate","month","getMonth","year","getFullYear","App","space","theme","setTheme","Provider","src","alt","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8aa6eda1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/overcast.b38ce85c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.4ce5a7d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/storm.638b558d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/space.b294966f.jpg\";","import React from 'react';\nimport {\n    WiDaySunny,\n    WiDayCloudy,\n    WiCloudy,\n    WiCloud,\n    WiDayShowers,\n    WiDayRain,\n    WiDaySnow,\n    WiFog,\n    WiDayThunderstorm,\n    WiSunrise,\n    WiSunset,\n    WiThermometer,\n    WiTime3,\n    WiDayLightWind\n} from 'react-icons/wi';\n\n\nexport const IconMap = {\n    '800':   <WiDaySunny/>,\n    '200':   <WiDayThunderstorm/>,\n    '201':   <WiDayThunderstorm/>,\n    '202':   <WiDayThunderstorm/>,\n    '210':   <WiDayThunderstorm/>,\n    '211':   <WiDayThunderstorm/>,\n    '212':   <WiDayThunderstorm/>,\n    '221':   <WiDayThunderstorm/>,\n    '230':   <WiDayThunderstorm/>,\n    '231':   <WiDayThunderstorm/>,\n    '232':   <WiDayThunderstorm/>,\n    '300':   <WiDayShowers/>,\n    '301':   <WiDayShowers/>,\n    '302':   <WiDayShowers/>,\n    '310':   <WiDayShowers/>,\n    '311':   <WiDayShowers/>,\n    '312':   <WiDayShowers/>,\n    '313':   <WiDayShowers/>,\n    '314':   <WiDayShowers/>,\n    '321':   <WiDayShowers/>,\n    '500':   <WiDayRain/>,\n    '501':   <WiDayRain/>,\n    '502':   <WiDayRain/>,\n    '503':   <WiDayRain/>,\n    '504':   <WiDayRain/>,\n    '511':   <WiDaySnow/>,\n    '520':   <WiDayShowers/>,\n    '521':   <WiDayShowers/>,\n    '522':   <WiDayShowers/>,\n    '531':   <WiDayShowers/>,\n    '600':  <WiDaySnow/>,\n    '601':  <WiDaySnow/>,\n    '602':  <WiDaySnow/>,\n    '611':  <WiDaySnow/>,\n    '612':  <WiDaySnow/>,\n    '613':  <WiDaySnow/>,\n    '615':  <WiDaySnow/>,\n    '616':  <WiDaySnow/>,\n    '620':  <WiDaySnow/>,\n    '621':  <WiDaySnow/>,\n    '622':  <WiDaySnow/>,\n    '701':   <WiFog/>,\n    '711':   <WiFog/>,\n    '721':   <WiFog/>,\n    '731':   <WiFog/>,\n    '741':   <WiFog/>,\n    '751':   <WiFog/>,\n    '761':   <WiFog/>,\n    '762':   <WiFog/>,\n    '771':   <WiFog/>,\n    '781':   <WiFog/>,\n    '801':   <WiCloudy/>,\n    '802':   <WiDayCloudy/>,\n    '803':   <WiCloudy/>,\n    '804':   <WiCloud/>,\n    'sunrise': <WiSunrise/>,\n    'sunset': <WiSunset/>,\n    'temp': <WiThermometer/>,\n    'time': <WiTime3/>,\n    'wind': <WiDayLightWind/>\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {IconMap} from './iconMap';\n\nconst WeatherContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    text-align: left;\n    .top{\n        display: flex;\n        flex-direction: row;\n        .col-one{\n            padding: 10px;\n            width: 50%;\n            svg{\n                width: 100%;\n                height: 100%;\n                fill: white;\n            }\n        }\n        .col-two{\n            display: flex;\n            flex-direction: column;\n            padding: 10px;\n            width: 50%;\n            justify-content: space-evenly;\n        p{\n            width: 100%;\n            text-transform: capitalize; \n            font-weight: 300; \n            margin: 10px;\n        }\n        p:nth-of-type(1) {\n                font-size: 30px;\n            }\n        p:nth-of-type(2) {\n                font-style: italic;\n                font-size: 20px;\n            }\n        }\n    }\n    .bottom{\n        display: flex;\n        flex-direction: row;\n        text-align: center;\n        p {\n            width: 50%;\n            svg{\n                width: 20px;\n                height: 20px;\n            }\n        }\n    }\n    `\n\nconst PrimaryWeather = (props) => {\n    const rise = new Date(props.sunrise*1000)\n    const a = rise.getHours().toString().length === 1 ? `0${rise.getHours()}` : rise.getHours();\n    const b = rise.getMinutes().toString().length === 1 ? `0${rise.getMinutes()}` : rise.getMinutes();\n\n    const set = new Date(props.sunset*1000)\n    const c = set.getHours().toString().length === 1 ? `0${set.getHours()}` : set.getHours();\n    const d = set.getMinutes().toString().length === 1 ? `0`+ set.getMinutes() : set.getMinutes();\n   \n\n    return (\n        <>\n            {/* <h3>{props.location}</h3> */}\n            <WeatherContainer>\n                <div className='top'>\n                    <div className=\"col-one\">\n                        {IconMap[props.id]}\n                    </div>\n                    <div className=\"col-two\">\n                        <p><mark>{props.temp} &#x2103;</mark></p>\n                        <p>{props.description}</p>\n                    </div>\n                </div>\n                <div className='bottom'>\n                    <p>{IconMap['sunrise']} {a}:{b} am</p>\n                    <p>{IconMap['sunset']} {c}:{d} pm</p>\n                    <p>{IconMap['wind']} {(props.wind*2.237).toFixed()} mph</p>\n                </div>\n            </WeatherContainer>\n        </>\n    )\n}\n\nexport default PrimaryWeather;","import React from 'react';\n\nexport const ThemeContext = React.createContext();\nexport const PositionContext = React.createContext()\n","import React, {useContext, useEffect} from 'react';\nimport {ThemeContext} from '../context/context';\nimport Clear from '../assets/clear.jpg';\nimport Clouds from '../assets/overcast.jpg';\nimport Rain from '../assets/rain.jpg';\nimport Thunderstorm from '../assets/storm.jpg';\nimport Overcast from '../assets/clear.jpg';\nimport styled from 'styled-components';\n\nconst WeathCardContainer = styled.div`\n    width: auto;\n    background: none;\n    border-radius: 10px;\n    text-align: left;\n    padding: 10px;\n    transition: 0.3s;\n    &:hover{\n        cursor: pointer;\n        background: rgba(0,0,0,0.3);\n    }\n    h2{\n        color: white;\n        font-weight: 300;\n    }\n    h3{\n        color: white;\n    }\n    p{\n        color: white;\n        font-weight: 300;\n    }\n`\nconst dayMap = ['Sunday','Monday','Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nconst backgroundMap = {'Clear': Clear, 'Rain': Rain, 'Overcast': Overcast, 'Thunderstorm' : Thunderstorm, 'Clouds': Clouds}\nconst WeatherCard = (props) => {\n    const {theme, setTheme} = useContext(ThemeContext)\n    const time = new Date(props.date*1000)\n    const day =dayMap[time.getDay()]\n    const date = time.getDate()\n    const suffix =  date === 1 || date === 21 || date === 31 ? `st`\n                   : date === 2 || date === 22 ? `nd` \n                   : date === 3 || date === 23 ? `rd` : `th`;\n\n    useEffect(() => {\n       if(props.today === 0){\n            setTheme(backgroundMap[props.main])   \n       }   \n    },[])\n\n    return (\n        <WeathCardContainer onClick={() => setTheme(backgroundMap[props.main])}>\n            {/* <h2>{props.title}</h2> */}\n            {/* <h3>{props.temp} &#x2103;</h3> */}\n            <p>{props.today === 0 ? `Today` : \n                props.today === 1 ? `Tomorrow` : `${day} ${date} ${suffix}`}</p>\n        </WeathCardContainer>\n    )\n}\n\nexport default WeatherCard","import Locations from './gb.json';\n\n\nconst LocationMapper = (placeName) => {\n   let result =  Locations.filter( e => e.city === placeName)\n   return result;\n}\n\nexport default LocationMapper;","import styled from 'styled-components';\n\nconst Spinner = styled.div`\n    color: white;\n    font-size: 20px;\n    margin: 100px auto;\n    width: 1em;\n    height: 1em;\n    border-radius: 50%;\n    position: relative;\n    text-indent: -9999em;\n    -webkit-animation: load4 1.3s infinite linear;\n    animation: load4 1.3s infinite linear;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n\n`\n\nexport default Spinner;","import React, {useState,useEffect,useContext} from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport PrimaryWeather from '../components/primaryWeather';\nimport WeatherCard from '../components/weatherCard';\nimport {PositionContext} from '../context/context';\nimport {date} from '../App';\nimport LocationMapper from '../components/locationMapper';\nimport Spinner from '../components/spinner';\n\nconst apiKey = `d62c3e3ede49b65f11eceeb16ca5c078`;\n\nconst WeeklyWeatherContainer = styled.section`\n    position: relative;\n    display: flex;\n    // background: rgba(0,0,0,0.5);\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    width: 100%;\n    margin: auto;\n    text-align: left;\n`\n\nconst WeeklyWeather = () => {\n    const {position, setPosition} = useContext(PositionContext)\n    const [forecast, setForecast] = useState(undefined)\n\n\n  useEffect(() => {\n    if(sessionStorage.getItem(`${position}-${date}`)){\n        let sessionData = JSON.parse(sessionStorage.getItem(`${position}-${date}`))\n        setForecast(sessionData)\n        console.log('Using Session Storage')\n    } else { \n        if(position === 'userLocation') {\n            const fetchData = async () => {  \n                navigator.geolocation.getCurrentPosition((geo) => {\n                    const params = {lon: geo.coords.longitude, lat: geo.coords.latitude, appid: apiKey}\n                    axios.get('https://api.openweathermap.org/data/2.5/onecall?', {params})\n                    .then((response) => {\n                            sessionStorage.setItem(`${position}-${date}`,JSON.stringify(response.data))\n                            setForecast(response.data)\n                            console.log('New Call')})\n                })\n            }\n            fetchData()\n\n        } else {\n            let location = LocationMapper(position)\n            const fetchData = async () => {\n                let params = {lat: location[0].lat,lon: location[0].lng, appid: apiKey}\n                const response = await axios.get('https://api.openweathermap.org/data/2.5/onecall?', {params})\n                sessionStorage.setItem(`${position}-${date}`,JSON.stringify(response.data))\n                setForecast(response.data)\n                console.log('New Call')\n            }\n            fetchData()\n        }\n    }\n  },[position])\n\n    return (\n        <WeeklyWeatherContainer>\n            {forecast ? \n                <PrimaryWeather\n                    location={position === 'userLocation' ? 'Current Location' : position}\n                    temp={(forecast.current.temp - 273.15).toFixed(2)}\n                    description={forecast.current.weather[0].description}\n                    sunset={forecast.current.sunset}\n                    sunrise={forecast.current.sunrise}\n                    wind={forecast.current.wind_speed}\n                    id={forecast.current.weather[0].id}\n               />   \n             : <Spinner/>}\n            {/* {forecast ? forecast.daily.map((e,i) => (\n                <WeatherCard\n                    key={i}\n                    date={e.dt}\n                    today={i}\n                    main={e.weather[0].main}\n                    />\n            )) \n            : <Spinner/> } */}\n        </WeeklyWeatherContainer>\n    )\n}\n\nexport default WeeklyWeather","import React, {useState, useEffect, useContext} from 'react';\nimport {PositionContext} from '../context/context';\nimport LocationMapper from './locationMapper';\nimport styled from 'styled-components';\nimport locations from './gb.json';\n\nconst sortedLocations = locations.sort((a,b) => (a.city > b.city) ? 1 : (b.city > a.city) ? -1 : 0);\n\nconst StyledSearch = styled.section`\n    position: relative;\n    width: 100%;\n    margin: 100px auto 10px auto;\n    input{\n        text-align: center;\n        color: white;\n        border: none;\n        padding: 20px;\n        font-size: 25px;\n        background: none;\n        width: 100%;\n        &::placeholder{\n            color: white;\n            font-weight: 100;\n        }\n    }\n`\n\nconst DropDownList = styled.ul`\n    position: absolute;\n    background:rgba(255,255,255,0.6);\n    padding: 0;\n    top: 70px;\n    left: 0;\n    width: 100%;\n    list-style: none;\n    transition: 0.2s;\n    max-height: ${props => props.toggle ? `350px` : `0`};\n    overflow: scroll;\n    border-radius: 5px;\n    z-index: 1000;\n`\nconst ListItem = styled.li`\n    width: 100%;\n    color: black;\n    margin: 0;\n    padding: 20px;\n    transition: 0.2s;\n    border-bottom: 1px solid silver;\n    &:hover{\n        cursor: pointer;\n        background: rgba(255,255,255,0.8);\n    }\n`\n\nconst Search = () => {\n    const {position, setPosition} = useContext(PositionContext)\n    const [input, setInput] = useState('')\n    const [list, setList] = useState(sortedLocations)\n    const [toggle, setToggle] = useState(false)\n    const [listSelection, setListSelection] = useState(undefined)\n\n    useEffect(() => {\n        input.length >= 1 && input !== listSelection ? setToggle(true) : setToggle(false);\n        let newList = sortedLocations.filter((a) => (a.city).toUpperCase().includes((input).toUpperCase()))\n        setList(newList)\n    }, [input,listSelection])\n\n    const clickHandler = (e) => {\n        setInput(e)\n        setListSelection(e)\n        setToggle(false)\n    }\n\n    useEffect(() => {\n        if(listSelection !== undefined) {\n            setPosition(listSelection)\n        }\n    }, [listSelection])\n\n    return (\n        <StyledSearch>\n            <input type='text' onChange={(e) => setInput(e.target.value)} autoFocus value={input} placeholder='Type to find location...'/>\n            <DropDownList toggle={toggle}>\n                {list.map((e,i) => (\n                   <ListItem onClick={() => clickHandler(e.city)} key={i}>{e.city}</ListItem> \n                ))}\n            </DropDownList>\n        </StyledSearch>\n    )\n}\n\nexport default Search;","import React, {useState} from 'react';\nimport WeeklyWeather from './containers/WeeklyWeather';\nimport Search from './components/search';\nimport {ThemeContext, PositionContext} from './context/context';\nimport space from './assets/space.jpg';\nimport './App.scss';\n\nconst d = new Date();\nconst day = d.getDate()\nconst month = d.getMonth()\nconst year = d.getFullYear()\nexport const date = `${day}/${month}/${year}`\n\n\nfunction App() {\n  const [theme, setTheme] = useState(space)\n  const [position, setPosition] = useState(`userLocation`)\n\n  return (\n    <ThemeContext.Provider value={{theme,setTheme}}>\n      <div className=\"App\">\n        <img className=\"Background\" src={theme} alt='Current weather'/>\n        <h1>Weather App v1.0</h1>\n        <PositionContext.Provider value={{position,setPosition}}>\n          <Search/>\n          <WeeklyWeather/>\n        </PositionContext.Provider>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clear.b4cbe3b6.jpg\";"],"sourceRoot":""}